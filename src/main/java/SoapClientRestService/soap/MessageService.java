
package SoapClientRestService.soap;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MessageService", targetNamespace = "http://webService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MessageService {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeAllMessages", targetNamespace = "http://webService/", className = "SoapClientRestService.soap.RemoveAllMessages")
    @ResponseWrapper(localName = "removeAllMessagesResponse", targetNamespace = "http://webService/", className = "SoapClientRestService.soap.RemoveAllMessagesResponse")
    public String removeAllMessages();

    /**
     * 
     * @return
     *     returns java.util.List<SoapClientRestService.soap.Message>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllMessages", targetNamespace = "http://webService/", className = "SoapClientRestService.soap.GetAllMessages")
    @ResponseWrapper(localName = "getAllMessagesResponse", targetNamespace = "http://webService/", className = "SoapClientRestService.soap.GetAllMessagesResponse")
    public List<Message> getAllMessages();

    /**
     * 
     * @param arg0
     * @return
     *     returns SoapClientRestService.soap.Message
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeMessage", targetNamespace = "http://webService/", className = "SoapClientRestService.soap.RemoveMessage")
    @ResponseWrapper(localName = "removeMessageResponse", targetNamespace = "http://webService/", className = "SoapClientRestService.soap.RemoveMessageResponse")
    public Message removeMessage(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns SoapClientRestService.soap.Message
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addMessage", targetNamespace = "http://webService/", className = "SoapClientRestService.soap.AddMessage")
    @ResponseWrapper(localName = "addMessageResponse", targetNamespace = "http://webService/", className = "SoapClientRestService.soap.AddMessageResponse")
    public Message addMessage(
        @WebParam(name = "arg0", targetNamespace = "")
        Message arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns SoapClientRestService.soap.Message
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateMessage", targetNamespace = "http://webService/", className = "SoapClientRestService.soap.UpdateMessage")
    @ResponseWrapper(localName = "updateMessageResponse", targetNamespace = "http://webService/", className = "SoapClientRestService.soap.UpdateMessageResponse")
    public Message updateMessage(
        @WebParam(name = "arg0", targetNamespace = "")
        Message arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns SoapClientRestService.soap.Message
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMessage", targetNamespace = "http://webService/", className = "SoapClientRestService.soap.GetMessage")
    @ResponseWrapper(localName = "getMessageResponse", targetNamespace = "http://webService/", className = "SoapClientRestService.soap.GetMessageResponse")
    public Message getMessage(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0);

}
